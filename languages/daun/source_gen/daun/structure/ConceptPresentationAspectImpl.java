package daun.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Absensi;
  private ConceptPresentation props_Data_Matkul;
  private ConceptPresentation props_Matkul;
  private ConceptPresentation props_Program;
  private ConceptPresentation props_Status;
  private ConceptPresentation props_Status_Data;
  private ConceptPresentation props_mahasiswa;
  private ConceptPresentation props_matkul_attribute;
  private ConceptPresentation props_rekap_jumlah;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Absensi:
        if (props_Absensi == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Absensi");
          props_Absensi = cpb.create();
        }
        return props_Absensi;
      case LanguageConceptSwitch.Data_Matkul:
        if (props_Data_Matkul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Data_Matkul");
          props_Data_Matkul = cpb.create();
        }
        return props_Data_Matkul;
      case LanguageConceptSwitch.Matkul:
        if (props_Matkul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Matkul");
          props_Matkul = cpb.create();
        }
        return props_Matkul;
      case LanguageConceptSwitch.Program:
        if (props_Program == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Program");
          props_Program = cpb.create();
        }
        return props_Program;
      case LanguageConceptSwitch.Status:
        if (props_Status == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Status");
          props_Status = cpb.create();
        }
        return props_Status;
      case LanguageConceptSwitch.Status_Data:
        if (props_Status_Data == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Status_Data");
          props_Status_Data = cpb.create();
        }
        return props_Status_Data;
      case LanguageConceptSwitch.mahasiswa:
        if (props_mahasiswa == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("mahasiswa");
          props_mahasiswa = cpb.create();
        }
        return props_mahasiswa;
      case LanguageConceptSwitch.matkul_attribute:
        if (props_matkul_attribute == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("matkul_attribute");
          props_matkul_attribute = cpb.create();
        }
        return props_matkul_attribute;
      case LanguageConceptSwitch.rekap_jumlah:
        if (props_rekap_jumlah == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("rekap_jumlah");
          props_rekap_jumlah = cpb.create();
        }
        return props_rekap_jumlah;
    }
    return null;
  }
}
